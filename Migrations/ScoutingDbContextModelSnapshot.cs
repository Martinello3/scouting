// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ScoutingApi.Data;

#nullable disable

namespace ScoutingApi.Migrations
{
    [DbContext(typeof(ScoutingDbContext))]
    partial class ScoutingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ScoutingApi.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvaliadorId")
                        .HasColumnType("integer");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ControleBola")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Disciplina")
                        .HasColumnType("integer");

                    b.Property<int>("Drible")
                        .HasColumnType("integer");

                    b.Property<int>("Finalizacao")
                        .HasColumnType("integer");

                    b.Property<int>("Forca")
                        .HasColumnType("integer");

                    b.Property<int>("InteligenciaEmocional")
                        .HasColumnType("integer");

                    b.Property<int>("JogadorId")
                        .HasColumnType("integer");

                    b.Property<int>("LeituraJogo")
                        .HasColumnType("integer");

                    b.Property<int>("Lideranca")
                        .HasColumnType("integer");

                    b.Property<int>("Passe")
                        .HasColumnType("integer");

                    b.Property<int>("Posicionamento")
                        .HasColumnType("integer");

                    b.Property<int>("Proatividade")
                        .HasColumnType("integer");

                    b.Property<int>("Resistencia")
                        .HasColumnType("integer");

                    b.Property<int>("TomadaDecisao")
                        .HasColumnType("integer");

                    b.Property<int>("Velocidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AvaliadorId");

                    b.HasIndex("JogadorId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("ScoutingApi.Models.Clube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Clubes");
                });

            modelBuilder.Entity("ScoutingApi.Models.HistoricoClube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JogadorId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClubeId");

                    b.HasIndex("JogadorId");

                    b.ToTable("HistoricoClubes");
                });

            modelBuilder.Entity("ScoutingApi.Models.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Altura")
                        .HasColumnType("numeric");

                    b.Property<int?>("ClubeAtualId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PeDominante")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("numeric");

                    b.Property<string>("Posicao")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClubeAtualId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("ScoutingApi.Models.Lesao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataRecuperacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("JogadorId")
                        .HasColumnType("integer");

                    b.Property<string>("LocalCorpo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("TipoLesao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("Lesoes");
                });

            modelBuilder.Entity("ScoutingApi.Models.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("integer");

                    b.Property<string>("CaminhoPdf")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("DataGeracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JogadorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("JogadorId");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("ScoutingApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ScoutingApi.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CaminhoVideo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JogadorId")
                        .HasColumnType("integer");

                    b.Property<string>("Marcacoes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("ScoutingApi.Models.Avaliacao", b =>
                {
                    b.HasOne("ScoutingApi.Models.Usuario", "Avaliador")
                        .WithMany()
                        .HasForeignKey("AvaliadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScoutingApi.Models.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliador");

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("ScoutingApi.Models.HistoricoClube", b =>
                {
                    b.HasOne("ScoutingApi.Models.Clube", "Clube")
                        .WithMany()
                        .HasForeignKey("ClubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScoutingApi.Models.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clube");

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("ScoutingApi.Models.Jogador", b =>
                {
                    b.HasOne("ScoutingApi.Models.Clube", "ClubeAtual")
                        .WithMany()
                        .HasForeignKey("ClubeAtualId");

                    b.Navigation("ClubeAtual");
                });

            modelBuilder.Entity("ScoutingApi.Models.Lesao", b =>
                {
                    b.HasOne("ScoutingApi.Models.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("ScoutingApi.Models.Relatorio", b =>
                {
                    b.HasOne("ScoutingApi.Models.Avaliacao", "Avaliacao")
                        .WithMany()
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScoutingApi.Models.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("ScoutingApi.Models.Video", b =>
                {
                    b.HasOne("ScoutingApi.Models.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");
                });
#pragma warning restore 612, 618
        }
    }
}
